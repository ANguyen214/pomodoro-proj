{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Progression.js\";\nimport React from \"react\";\n\nfunction Progression({\n  session,\n  focusDuration,\n  breakDuration,\n  isTimerRunning,\n  playPause,\n  classNames,\n  setSession,\n  setIsTimerRunning,\n  sessionTitle,\n  timeRemaining,\n  aria\n}) {\n  function calcTimeRemaining(time) {\n    let timeInMins = \"\";\n    let minutes = Math.floor(time / 60);\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    let seconds = time - minutes * 60;\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    timeInMins = `${minutes}:${seconds}`.toString();\n    return timeInMins;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: () => {\n      setSession(null);\n      setIsTimerRunning(false);\n    },\n    disabled: !isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, sessionTitle(session.label)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, calcTimeRemaining(session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, !isTimerRunning ? \"PAUSED\" : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": aria // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${aria}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))))) : null));\n}\n\nexport default Progression;","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Progression.js"],"names":["React","Progression","session","focusDuration","breakDuration","isTimerRunning","playPause","classNames","setSession","setIsTimerRunning","sessionTitle","timeRemaining","aria","calcTimeRemaining","time","timeInMins","minutes","Math","floor","seconds","toString","oi","label","height","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction Progression({session, focusDuration, breakDuration, isTimerRunning, playPause,\r\nclassNames, setSession, setIsTimerRunning, sessionTitle, timeRemaining, aria}){\r\n  \r\n  function calcTimeRemaining (time) {\r\n    let timeInMins = \"\";\r\n    let minutes = Math.floor(time / 60);\r\n    if(minutes < 10) {minutes = \"0\" + minutes;}\r\n    let seconds = time - minutes * 60;\r\n    if(seconds < 10) {seconds = \"0\" + seconds;}\r\n    timeInMins = (`${minutes}:${seconds}`).toString();\r\n  \r\n    return timeInMins;\r\n  }\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div\r\n            className=\"btn-group btn-group-lg mb-2\"\r\n            role=\"group\"\r\n            aria-label=\"Timer controls\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-testid=\"play-pause\"\r\n              title=\"Start or pause timer\"\r\n              onClick={playPause}\r\n            >\r\n              <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": !isTimerRunning,\r\n                  \"oi-media-pause\": isTimerRunning,\r\n                })}\r\n              />\r\n            </button>\r\n            {/* TODO: Implement stopping the current focus or break session. \r\n            and disable the stop button when there is no active session */}\r\n            {/* TODO: Disable the stop button when there is no active session */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"stop\"\r\n              title=\"Stop the session\"\r\n              onClick={() => {\r\n                setSession(null);\r\n                setIsTimerRunning(false)\r\n              }}\r\n              disabled={!isTimerRunning}\r\n            >\r\n              <span className=\"oi oi-media-stop\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n      {/* TODO: This area should show only when there is an active focus or break - i.e. \r\n      the session is running or is paused */}\r\n      {session ? (\r\n        <div>\r\n        <div className=\"row mb-2\">\r\n        <div className=\"col\"> \r\n          {/* TODO: Update message below to include current session \r\n          (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {/*{session?.label} for {focusDuration} minutes*/}\r\n            {sessionTitle(session.label)}\r\n          </h2>\r\n          {/* TODO: Update message below correctly format the time \r\n          remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {/*{session?.timeRemaining} remaining*/}\r\n            {calcTimeRemaining(session.timeRemaining)} remaining\r\n          </p>\r\n          <h3>{!isTimerRunning ? \"PAUSED\" : null }</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow={aria} // TODO: Increase aria-valuenow as elapsed time increases\r\n              style={{ width: `${aria}%`}} // TODO: Increase width % as elapsed time increases\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>): null}\r\n      \r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Progression;"]},"metadata":{},"sourceType":"module"}